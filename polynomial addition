#include <stdio.h>
#include <stdlib.h>
#define MAX 30

struct poly
{
	int coeff;
	int exp;
	}
	term[MAX];

void polyadd(int af,int al,int bf,int bl,int free);
char compare(int a, int b);
int  newterm(int a, int b, int size);
int main()
{
	int i,j,num1,num2,free;
	int af,al,bf,bl;

	printf("Enter the number terms of polynmial 1.\n");
	scanf("%d",&num1);
	printf("Enter the coefficients and exponents of polynmial 1.\n");
	for (i=0;i<num1;i++)
    {  printf("Enter the coefficient of term .\n","%d",i);
	   scanf("%d",&term[i].coeff);
	   printf("Enter the exponent of term .\n","%d",i);
      scanf("%d",&term[i].exp);
	  }	
	
    printf("Enter the number terms of polynmial 2.\n");
	scanf("%d",&num2);
	
	printf("Enter the coefficients and exponents of polynmial 2.\n");
	free=num1+num2;
	for (i=num1;i<free;i++)
    { printf("Enter the coefficient of term .\n");
	  scanf("%d",&term[i].coeff);
	  printf("Enter the exponent of term .\n");
      scanf("%d",&term[i].exp);
	  }	

	printf("Polynmials are.\n");
	i=0;
	while(i<num1){	
	printf("%dX^%d+", term[i].coeff,term[i].exp);
	i++;
	if (i==num1)
	break;
	printf("+");
	}
	printf("\n");
	i=num1;
	while (i<free)
    {printf("%dX^%d+", term[i].coeff,term[i].exp);
    i++;
	if (i==free)
	break;
	printf("+");
		}
	printf("\n");
	af=0;al=num1-1;bf=num1;bl=free-1;
	polyadd(af,al,bf,bl,free);
}
void polyadd(int af,int al,int bf,int bl,int free){
	int p,i,q,sum=0,free1;
	free1=free;
	p=af;
	q=bf;
	while ((p<=al)&&(q<=bl))
	{ 
	 switch(compare(term[p].exp,term[q].exp))
	 {
	 	case 1:
	 		{
	 			sum=term[p].coeff+term[q].coeff;
	 			if (sum!=0)
	 			{
	 				free= newterm(sum,term[p].exp,free);
	 				p++;
	 				q++;
	 				
				 }
				 break;
				 
			 }
			 case 2:
			 	{
			 		free= newterm(term[p].coeff,term[p].exp,free);
			 		p++;
			 		break;
				 }
				 case 3:
			 	{
			 		free= newterm(term[q].coeff,term[q].exp,free);
			 		q++;
			 		break;
				 }
	 }
	}
 while (p<=al)
 
 {free= newterm(term[p].coeff,term[p].exp,free);
 p++;
 
 	
 }
 while (q<=bl)
 {
 	free= newterm(term[q].coeff,term[q].exp,free);
 	q++;
 }
 printf("Resultant Polynomial\n");
 
 i=free1;
 while (i<free)
{printf("%dX^%d+", term[i].coeff,term[i].exp);
i++;
if (i==free)
break;
printf("+");
	
 } 
 printf("\n");
 
 }
 char compare(int a, int b )
{if (a==b)
return (1);
else if (a>b)
return (2);
else
return (3);	}	

int newterm(int a,int b,int fsize)
{
	if(fsize>=MAX)
	{ printf("Insuffient space \n");
	exit(0);
	}
	else
	{
		term[fsize].coeff=a;
		term[fsize].exp=b;
		fsize++;
		return fsize;
		
		
	}
}
