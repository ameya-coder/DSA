#include <stdio.h>
#include <conio.h>

char stack[10];
int top=-1;
void push(char);
char pop();
int priority(char);
int main()
{
	char exp[20],optr;
	int i,length;

	printf("\n Enter Infix Expression \n");
	fgets(exp,20,stdin);
	printf("\n Postfix Expression  \n");
	for (i=0;exp[i]!='\0';i++)
	{
		if (exp[i]=='(')
		push(exp[i]);
		else if ((exp[i]>='a'&&exp[i]<='z')||(exp[i]>='A'&&exp[i]<='Z'))
		printf("%c",exp[i]);
	    else if (exp[i]=='+'||exp[i]=='-'||exp[i]=='*'||exp[i]=='/'||exp[i]=='^')
	    
		{
			if (stack[top]==('(')||top==-1)
			{
			
			push(exp[i]);
			
			
			}
			else if (priority(stack[top])>=priority(exp[i]))
			{
				
			
		while(priority(stack[top])>=priority(exp[i]))
		{ 
		    optr=pop();
		    printf("%c",optr);
		}
		push(exp[i]);
	}
	else
	{ 
	   push(exp[i]);
	   
	}
	}

else if (exp[i]==')')
{
	while (stack[top]!='(')
	{
		optr=pop();
		printf("%c",optr);
	}
	top--;
	
}
}
while(top!=-1)
{
		optr=pop();
		printf("%c",optr);
}
printf("\n");
getch();
}

void push(char c) 
{
	top++;
	stack[top]=c;
	
}
char pop()
{
	char op;
	op=stack[top];
	top--;
	return (op);
}
int priority(char optr)
	{
		switch(optr)
		{
			case'*':
		    case'/':
		    	return(2);
		    case'+':
		    case'-':
		    	return(1);
		}
	}
